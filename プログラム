float baseH = 15;

float arm1W = 13;
float arm1D = 13;
float arm1L = 5;

float arm2W = 6;
float arm2D = 4;
float arm2L = 30;

float arm3W = 1;
float arm3D = 1;
float arm3L = 20;

float arm4W = 10;
float arm4D = 3;
float arm4L = 10;

float angle0 = 0;
float angle1 = 0;
float angle2 = 0;
float angle3 = 0;
float angle4 = 0;
float l3 = 0;

float dif = 1.0;
float x, y, vx;

void setup(){
  size(1200, 1200, P3D);
  camera(100, 100, 100, 0, 0, 0, 0, 0, -1);
  stroke(1);  
  strokeWeight(1);
}

void draw(){
  
  int r = mouseX; 
  int g = mouseY; 
  int b = 100;
  background( r, g, b );
  
  if(keyPressed){
    if(key == 'a'){
      angle0 = angle0 + dif;
    }
    if(key == 'A'){
      angle0 = angle0 - dif;
    }
    if(key == 'b'){
      angle1 = angle1 + dif;
    }
    if(key == 'B'){
      angle1 = angle1 - dif;
    }
    if(key == 'c'){
      angle2 = angle2 + dif;
    }
    if(key == 'C'){
      angle2 = angle2 - dif;
    }
    if(key == 'd'){
      angle3 = angle3 + dif;
    }
    if(key == 'D'){
      angle3 = angle3 - dif;
    }
    if(key == 'e'){
      angle4 = angle4 + dif;
    }
    if(key == 'E'){
      angle4 = angle4 - dif;
    }
    if(key == 'f'){
      angle4 = angle4 + dif*0.2;
    }
    if(key == 'F'){
      angle4 = angle4 - dif*0.2;
    }
    if(key == 'Z'){
      angle0 = 0;
      angle1 = 0;
      angle2 = 0;
      angle3 = 0;
      angle4 = 0;
    }
  }
  
  //base
  rotateZ(radians(angle0));
  xyzAxis(30); //xyzAxis @ base
  translate(0,0,baseH/2);
  fill(50);
  box(20,20,baseH);
  
  
  //1st link
  rotateZ(radians(angle1));
  translate(0,0,baseH/2+arm1L/2);
  fill(100);
  box(arm1W,arm1D,arm1L);
  
  //2nd link
  //go to 2nd joint
  translate(0,0,arm1L/2);
  rotateX(radians(angle2));  
  //go to center of 2nd joint
  translate(0,0,arm2L/2);
  fill(175);
  box(arm2W,arm2D,arm2L);
  
  //3rd link
  // go to 3rd joint
  translate(0, 0, arm2L/2);
  rotateX(radians(angle3));
  // go to center of 3rd joint
  translate(1.5, 0, arm3L/2);
  fill(200);
  box(arm3W,arm3D,arm3L);
  translate(-3, 0, 0);
  box(arm3W,arm3D,arm3L);
  
   //4rd link
  // go to 4rd joint
  translate(1.5, 0, arm3L/2);
  rotateX(radians(angle4));
  // go to center of 4rd joint
  translate(0, 0, arm4L/2);
  fill(150);
  box(arm4W,arm4D,arm4L);
  
  //xyzAxis @ Pr
  translate(0, 0, arm4L/2);
  xyzAxis(20);

}


void xyzAxis(float len){

  // x axis
  fill(255,0,0);
  pushMatrix();
  translate(len/2,0,0);
  box(len,1,1);
  popMatrix();
  
  // y axis
  fill(0,255,0);
  pushMatrix();
  translate(0,len/2,0);
  box(1,len,1);
  popMatrix();
  
  // z axis
  fill(0,0,255);
  pushMatrix();
  translate(0,0,len/2);
  box(1,1,len);
  popMatrix();
}
